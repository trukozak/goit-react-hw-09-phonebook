{"version":3,"sources":["redux/contacts/contactsReducer.js","redux/auth/authReducer.js","redux/error/errorReducer.js","redux/rootReducer.js","redux/store.js","index.js","languages/english.js","languages/index.js","languages/russian.js","languages/ukrainian.js","redux/auth/authOperations.js","hooks/useLanguagePersistor.js","themes/index.js","themes/lightTheme.js","themes/darkTheme.js","hooks/usePersistedTheme.js","redux/auth/authSelector.js","components/LanguageSwitcher/LanguageSwitcher.js","routes/mainRoutes.js","languages/languageSelectors/navigation.js","components/Navigation/NavigationItem/NavigationItem.js","components/Navigation/NavigationStyled.js","components/Navigation/Navigation.js","components/ThemeSwitcher/ThemeSwitcher.js","components/UserMenu/UserMenuStyled.js","components/UserMenu/UserMenu.js","components/Header/HeaderStyled.js","components/Header/Header.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/Main/MainStyled.js","components/Main/Main.js","components/App.js","redux/auth/authActions.js","components/Loader/Loader.js","redux/contacts/contactsAction.js"],"names":["contactsItemReducer","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","logOutSuccess","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","filterReducer","changeFilter","contactsReducer","combineReducers","contacts","authReducer","name","email","idToken","error","registerSuccess","user","token","loginSuccess","getCurrentUserSuccess","setError","refreshError","registerError","registerRequest","loginError","loginRequest","logOutError","logOutRequest","getCurrentUserError","getCurrentUserRequest","persistConfig","key","storage","whitelist","rootReducer","items","auth","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistStore","ReactDOM","render","App","document","getElementById","languages","list","russian","title","header","navigation","home","register","login","usermenu","logout","pages","authPage","authForm","username","password","buttons","placeholders","english","ukrainian","axios","defaults","baseURL","headers","common","registerOperation","dispatch","a","post","data","message","loginOperation","logOutOperation","currentUserOperation","getState","persistedToken","get","response","useLanguagePersistor","useState","JSON","parse","localStorage","getItem","language","setLanguage","useEffect","setItem","stringify","themes","light","colors","primary","secondary","background","text","main","active","input","label","button","buttonText","attention","edit","dark","usePersistedTheme","storageTheme","getTheme","theme","setTheme","getIsAuth","getUserName","LanguageSwitcher","useContext","LanguageContext","value","onChange","e","lang","target","style","width","position","top","right","map","mainRoutes","path","component","lazy","exact","isPrivate","restricted","navSelectors","toUpperCase","NavigationItem","isAuth","className","activeClassName","to","NavigationContainer","styled","nav","props","Navigation","ThemeContext","useSelector","route","ThemeSwitcher","changeTheme","checked","onColor","offColor","height","UserMenuStyled","div","UserMenu","useDispatch","type","onClick","HeaderContainer","Header","PrivateRoute","PublicRoute","MainContainer","Main","fallback","createContext","Provider","createAction","AppLoader","color","timeout"],"mappings":"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","file":"static/js/main.9e0025cf.chunk.js","sourcesContent":["import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport { logOutSuccess } from '../auth/authActions';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  changeFilter,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n} from './contactsAction';\r\n\r\nconst contactsItemReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [logOutSuccess]: () => [],\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  contacts: contactsItemReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  getCurrentUserSuccess,\r\n  loginSuccess,\r\n  logOutSuccess,\r\n  registerSuccess,\r\n} from './authActions';\r\n\r\nconst authReducer = createReducer(\r\n  {\r\n    name: '',\r\n    email: '',\r\n    idToken: '',\r\n    error: '',\r\n  },\r\n  {\r\n    [registerSuccess]: (_, { payload }) => ({\r\n      name: payload.user.name,\r\n      email: payload.user.email,\r\n      idToken: payload.token,\r\n    }),\r\n\r\n    [loginSuccess]: (_, { payload }) => ({\r\n      name: payload.user.name,\r\n      email: payload.user.email,\r\n      idToken: payload.token,\r\n    }),\r\n\r\n    [logOutSuccess]: state => ({\r\n      name: '',\r\n      email: '',\r\n      idToken: '',\r\n    }),\r\n\r\n    [getCurrentUserSuccess]: (state, { payload }) => ({ ...state, ...payload }),\r\n  },\r\n);\r\n\r\nexport default authReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { getCurrentUserError, getCurrentUserRequest, loginError, loginRequest, logOutError, logOutRequest, registerError, registerRequest } from '../auth/authActions';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n} from '../contacts/contactsAction';\r\n\r\nconst setError = (_, { payload }) => payload;\r\nconst refreshError = () => '';\r\n\r\nexport const error = createReducer('', {\r\n  [registerError]: setError,\r\n  [registerRequest]: refreshError,\r\n  [loginError]: setError,\r\n  [loginRequest]: refreshError,\r\n  [logOutError]: setError,\r\n  [logOutRequest]: refreshError,\r\n  [getCurrentUserError]: setError,\r\n  [getCurrentUserRequest]: refreshError,\r\n  [fetchContactsRequest]: refreshError,\r\n  [fetchContactsError]: setError,\r\n  [addContactRequest]: refreshError,\r\n  [addContactError]: setError,\r\n  [deleteContactRequest]: refreshError,\r\n  [deleteContactError]: setError,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport authReducer from './auth/authReducer';\r\nimport { error } from './error/errorReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['idToken'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contactsReducer,\r\n  auth: persistReducer(persistConfig, authReducer),\r\n  error,\r\n});\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { persistStore } from 'redux-persist';\r\nimport rootReducer from './rootReducer';\r\n\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n});\r\n\r\npersistStore(store);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","const english = {\r\n  title: 'english',\r\n  header: {\r\n    navigation: {\r\n      home: 'home',\r\n      contacts: 'contacts',\r\n      register: 'register',\r\n      login: 'login',\r\n    },\r\n    usermenu: {\r\n      logout: 'logout',\r\n    },\r\n  },\r\n  pages: {\r\n    authPage: {\r\n      authForm: {\r\n        username: 'Name',\r\n        email: 'Email',\r\n        password: 'Password',\r\n        buttons: {\r\n          register: 'Register',\r\n          login: 'Login',\r\n        },\r\n        placeholders: {\r\n          name: 'Enter name',\r\n          password: 'Enter password',\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default english;\r\n","import english from './english';\r\nimport russian from './russian';\r\nimport ukrainian from './ukrainian';\r\n\r\nconst languages = {\r\n  list: ['english', 'ukrainian', 'russian'],\r\n\r\n  russian: russian,\r\n  english: english,\r\n  ukrainian: ukrainian,\r\n};\r\n\r\nexport default languages;\r\n","const russian = {\r\n  title: 'russian',\r\n  header: {\r\n    navigation: {\r\n      home: 'главная',\r\n      contacts: 'контакты',\r\n      register: 'регистрация',\r\n      login: 'войти',\r\n    },\r\n    usermenu: {\r\n      logout: 'выйти',\r\n    },\r\n  },\r\n  pages: {\r\n    authPage: {\r\n      authForm: {\r\n        username: 'Имя',\r\n        email: 'Електронная почта',\r\n        password: 'Пароль',\r\n        buttons: {\r\n          register: 'Зарегистрироваться',\r\n          login: 'Войти',\r\n        },\r\n        placeholders: {\r\n          name: 'Введите имя',\r\n          password: 'Введите пароль',\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default russian;\r\n","const ukrainian = {\r\n  title: 'ukrainian',\r\n  header: {\r\n    navigation: {\r\n      home: 'головна',\r\n      contacts: 'контакти',\r\n      register: 'реєстрація',\r\n      login: 'увійти',\r\n    },\r\n    usermenu: {\r\n      logout: 'вийти',\r\n    },\r\n  },\r\n  pages: {\r\n    authPage: {\r\n      authForm: {\r\n        username: \"Ім'я\",\r\n        email: 'Електронна пошта',\r\n        password: 'Пароль',\r\n        buttons: {\r\n          register: 'Зареєструватись',\r\n          login: 'Увійти',\r\n        },\r\n        placeholders: {\r\n          name: \"Введіть ім'я\",\r\n          password: 'Введіть пароль',\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default ukrainian;\r\n","import axios from 'axios';\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  logOutError,\r\n  logOutRequest,\r\n  logOutSuccess,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n} from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set: token => {\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  },\r\n  unset: () => {\r\n    axios.defaults.headers.common['Authorization'] = '';\r\n  },\r\n};\r\n\r\nexport const registerOperation = user => async dispatch => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/signup', {\r\n      ...user,\r\n    });\r\n    token.set(data.token);\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const loginOperation = user => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/login', {\r\n      ...user,\r\n    });\r\n    token.set(data.token);\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\nexport const logOutOperation = user => async dispatch => {\r\n  dispatch(logOutRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/logout', user);\r\n\r\n    token.unset();\r\n    dispatch(logOutSuccess(data));\r\n  } catch (error) {\r\n    dispatch(logOutError(error.message));\r\n  }\r\n};\r\n\r\nexport const currentUserOperation = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport languages from '../languages';\r\n\r\nconst useLanguagePersistor = () => {\r\n  const getLocalSTLanguage = () => {\r\n    const lang = JSON.parse(localStorage.getItem('language'));\r\n    return lang || languages.ukrainian.title;\r\n  };\r\n\r\n  const [language, setLanguage] = useState(getLocalSTLanguage());\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('language', JSON.stringify(language));\r\n  }, [language]);\r\n\r\n  return [language, setLanguage];\r\n};\r\n\r\nexport default useLanguagePersistor;\r\n","import light from \"./lightTheme\";\nimport dark from \"./darkTheme\";\nconst themes = {\n  light,\n  dark,\n};\n\nexport default themes;\n","const light = {\n  title: \"light\",\n  colors: {\n    primary: \"#FFFFFF\",\n    secondary: \"#DBD7D8\",\n    background: \"#FFFFFF\",\n    text: \"#5A5A5A\",\n    main: \"#6e4ac2\",\n    active: \"#5F73A1\",\n    title: \"#000000\",\n    input: \"#000000\",\n    label: \"#5A5A5A\",\n    button: \"#A8A8A8\",\n    buttonText: \"#FFFFFF\",\n    attention: \"#6e4ac2\",\n    edit: \"#3a3ad1\",\n  },\n};\n\nexport default light;\n","const dark = {\n  title: \"dark\",\n  colors: {\n    primary: \"#424242\",\n    secondary: \"#3D3D3D\",\n    background: \"#212121\",\n    text: \"#FFFFFF\",\n    main: \"#819FF5\",\n    active: \"#5F73A1\",\n    title: \"#FFFFFF\",\n    label: \"#DBD7D8\",\n    input: \"#111111\",\n    button: \"#504F4F\",\n    buttonText: \"#FFFFFF\",\n    attention: \"#6e4ac2\",\n    edit: \"#14dc6783\",\n  },\n};\n\nexport default dark;\n","import { useEffect, useState } from \"react\";\nimport themes from \"../themes\";\nconst usePersistedTheme = () => {\n  const getTheme = () => {\n    const storageTheme = JSON.parse(localStorage.getItem(\"theme\"));\n    return themes[storageTheme] || themes.light;\n  };\n  const [theme, setTheme] = useState(getTheme());\n\n  const changeTheme = () => {\n    theme.title === \"dark\" ? setTheme(themes.light) : setTheme(themes.dark);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", JSON.stringify(theme.title));\n  }, [theme]);\n\n  return [theme, changeTheme];\n};\n\nexport default usePersistedTheme;\n","export const getIsAuth = (state) => state.auth.idToken;\nexport const getUserName = (state) => state.auth.name;\n","import React, { useContext } from 'react';\r\nimport languages from '../../languages';\r\nimport { LanguageContext } from '../App';\r\n\r\nconst LanguageSwitcher = () => {\r\n  const { language, setLanguage } = useContext(LanguageContext);\r\n\r\n  const selectLanguage = e => {\r\n    const lang = e.target.value;\r\n    setLanguage(lang);\r\n  };\r\n  return (\r\n    <>\r\n      <select\r\n        value={language}\r\n        onChange={selectLanguage}\r\n        style={{ width: '100px', position: 'absolute', top: 70, right: 10 }}\r\n      >\r\n        {languages.list.map(lang => (\r\n          <option value={lang} key={lang}>\r\n            {lang}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher;\r\n","import { lazy } from 'react';\r\n\r\nexport const mainRoutes = [\r\n  {\r\n    name: 'home',\r\n    path: '/',\r\n    component: lazy(\r\n      () => import('../pages/HomePage') /*webpackChunkName: 'HomePage'*/,\r\n    ),\r\n    exact: true,\r\n    isPrivate: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    name: 'contacts',\r\n    path: '/contacts',\r\n    component: lazy(\r\n      () =>\r\n        import('../pages/ContactsPage') /*webpackChunkName: 'ContactsPage'*/,\r\n    ),\r\n    exact: true,\r\n    isPrivate: true,\r\n    restricted: false,\r\n  },\r\n  {\r\n    name: 'register',\r\n    path: '/register',\r\n    component: lazy(\r\n      () => import('../pages/AuthPage') /*webpackChunkName: 'AuthPage'*/,\r\n    ),\r\n    exact: true,\r\n    isPrivate: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    name: 'login',\r\n    path: '/login',\r\n    component: lazy(\r\n      () => import('../pages/AuthPage') /*webpackChunkName: 'AuthPage'*/,\r\n    ),\r\n    exact: true,\r\n    isPrivate: false,\r\n    restricted: true,\r\n  },\r\n];\r\n","import languages from '..';\r\n\r\nexport const navSelectors = (language, value) =>\r\n  languages[language].header.navigation[value].toUpperCase();\r\n","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { navSelectors } from '../../../languages/languageSelectors/navigation';\r\nimport { LanguageContext } from '../../App';\r\nconst NavigationItem = ({\r\n  path,\r\n  exact,\r\n  name,\r\n  isPrivate,\r\n  restricted,\r\n  isAuth,\r\n}) => {\r\n  const { language } = useContext(LanguageContext);\r\n  return (\r\n    <>\r\n      {!isPrivate && !restricted && (\r\n        <li className=\"navItem\" key={path}>\r\n          <NavLink\r\n            className=\"navLink\"\r\n            activeClassName=\"navLinkActive\"\r\n            to={path}\r\n            exact={exact}\r\n          >\r\n            {navSelectors(language, 'home')}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {isPrivate && !restricted && isAuth && (\r\n        <li className=\"navItem\" key={path}>\r\n          <NavLink\r\n            className=\"navLink\"\r\n            activeClassName=\"navLinkActive\"\r\n            to={path}\r\n            exact={exact}\r\n          >\r\n            {navSelectors(language, 'contacts')}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {!isPrivate && restricted && !isAuth && (\r\n        <li className=\"navItem\" key={path}>\r\n          <NavLink\r\n            className=\"navLink\"\r\n            activeClassName=\"navLinkActive\"\r\n            to={path}\r\n            exact={exact}\r\n          >\r\n            {navSelectors(language, [name])}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationItem;\r\n","import styled from 'styled-components';\r\nexport const NavigationContainer = styled.nav`\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  .navList {\r\n    display: flex;\r\n    list-style: none;\r\n  }\r\n  .navItem {\r\n    margin-right: 20px;\r\n  }\r\n  .navLink {\r\n    color: ${props => props.colors.title};\r\n    text-decoration: none;\r\n  }\r\n  .navLinkActive {\r\n    border-bottom: 2px solid;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuth } from '../../redux/auth/authSelector';\r\nimport { mainRoutes } from '../../routes/mainRoutes';\r\nimport { ThemeContext } from '../App';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport { NavigationContainer } from './NavigationStyled';\r\n\r\nconst Navigation = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const isAuth = useSelector(getIsAuth);\r\n  return (\r\n    <NavigationContainer colors={theme.colors}>\r\n      <ul className=\"navList\">\r\n        {mainRoutes.map(route => (\r\n          <NavigationItem {...route} key={route.path} isAuth={isAuth} />\r\n        ))}\r\n      </ul>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useContext } from 'react';\r\nimport Switch from 'react-switch';\r\nimport { ThemeContext } from '../App';\r\n\r\nconst ThemeSwitcher = () => {\r\n  const { theme, changeTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <>\r\n      <Switch\r\n        onChange={changeTheme}\r\n        checked={theme.title === 'light' ? true : false}\r\n        onColor={theme.colors.text}\r\n        offColor={theme.colors.main}\r\n        height={30}\r\n        width={70}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitcher;\r\n","import styled from 'styled-components';\r\n\r\nexport const UserMenuStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin-left: auto;\r\n  .text {\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    color: ${props => props.colors.title};\r\n  }\r\n  button {\r\n    margin-left: 10px;\r\n    margin-right: 20px;\r\n    font-size: 14px;\r\n    padding: 10px;\r\n    font-weight: 700;\r\n    color: #6d92c2;\r\n    border: none;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n    box-shadow: 0px 1px 13px 0px #696665;\r\n    cursor: pointer;\r\n  }\r\n  button:hover,\r\n  :focus {\r\n    color: #c7c1c1;\r\n    box-shadow: 0px 1px 13px 0px #e9d8d9;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport languages from '../../languages';\r\nimport { logOutOperation } from '../../redux/auth/authOperations';\r\nimport { getUserName } from '../../redux/auth/authSelector';\r\nimport { LanguageContext, ThemeContext } from '../App';\r\nimport { UserMenuStyled } from './UserMenuStyled';\r\n\r\nconst UserMenu = () => {\r\n  const { language } = useContext(LanguageContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const username = useSelector(getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogOut = () => {\r\n    dispatch(logOutOperation());\r\n  };\r\n  return (\r\n    <UserMenuStyled colors={theme.colors}>\r\n      <p className=\"text\">\r\n        Welcome, <span className=\"\">{username}</span>\r\n      </p>\r\n      <button className=\"\" type=\"button\" onClick={onLogOut}>\r\n        {languages[language].header.usermenu.logout}\r\n      </button>\r\n    </UserMenuStyled>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.header`\r\n  height: 60px;\r\n  background-color: ${props => props.colors.secondary};\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuth } from '../../redux/auth/authSelector';\r\nimport { ThemeContext } from '../App';\r\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport ThemeSwitcher from '../ThemeSwitcher/ThemeSwitcher';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport { HeaderContainer } from './HeaderStyled';\r\n\r\nconst Header = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const isAuth = useSelector(getIsAuth);\r\n  return (\r\n    <>\r\n      <HeaderContainer colors={theme.colors}>\r\n        <LanguageSwitcher />\r\n        <Navigation />\r\n        {isAuth && <UserMenu />}\r\n        <ThemeSwitcher />\r\n      </HeaderContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ isAuth, path, component, exact }) => {\r\n  return !isAuth ? (\r\n    <Redirect to=\"/register\" />\r\n  ) : (\r\n    <Route path={path} exact={exact} component={component} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({ isAuth, path, component, exact, restricted }) => {\r\n  return isAuth && restricted ? (\r\n    <Redirect to=\"/contacts\" />\r\n  ) : (\r\n    <Route path={path} exact={exact} component={component} />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n ","import styled from 'styled-components';\r\n\r\nexport const MainContainer = styled.main`\r\n  padding: 0 40px;\r\n  min-height: 100vh;\r\n  color: ${props => props.colors.title};\r\n  background-color: ${props => props.colors.background};\r\n`;\r\n","import React, { Suspense, useContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport { getIsAuth } from '../../redux/auth/authSelector';\r\nimport { mainRoutes } from '../../routes/mainRoutes';\r\nimport PrivateRoute from '../../routes/PrivateRoute';\r\nimport PublicRoute from '../../routes/PublicRoute';\r\nimport { ThemeContext } from '../App';\r\nimport { AppLoader } from '../Loader/Loader';\r\nimport { MainContainer } from './MainStyled';\r\n\r\nconst Main = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const isAuth = useSelector(getIsAuth);\r\n  return (\r\n    <MainContainer colors={theme.colors}>\r\n      <Suspense fallback={<AppLoader />}>\r\n        <Switch>\r\n          {mainRoutes.map(({ isPrivate, path, exact, component, restricted }) =>\r\n            isPrivate ? (\r\n              <PrivateRoute\r\n                path={path}\r\n                exact={exact}\r\n                component={component}\r\n                key={path}\r\n                isAuth={isAuth}\r\n              />\r\n            ) : (\r\n              <PublicRoute\r\n                path={path}\r\n                exact={exact}\r\n                component={component}\r\n                key={path}\r\n                isAuth={isAuth}\r\n                restricted={restricted}\r\n              />\r\n            ),\r\n          )}\r\n        </Switch>\r\n      </Suspense>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { createContext, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport useLanguagePersistor from '../hooks/useLanguagePersistor';\r\nimport usePersistedTheme from '../hooks/usePersistedTheme';\r\nimport { currentUserOperation } from '../redux/auth/authOperations';\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\n\r\nexport const LanguageContext = createContext();\r\nexport const ThemeContext = createContext();\r\n\r\nconst App = () => {\r\n  const [language, setLanguage] = useLanguagePersistor();\r\n  const [theme, changeTheme] = usePersistedTheme();\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(currentUserOperation());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <LanguageContext.Provider value={{ language, setLanguage }}>\r\n        <ThemeContext.Provider value={{ theme, changeTheme }}>\r\n          <Header />\r\n          <Main />\r\n        </ThemeContext.Provider>\r\n      </LanguageContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logOutRequest = createAction('auth/logOutRequest');\r\nexport const logOutSuccess = createAction('auth/logOutSuccess');\r\nexport const logOutError = createAction('auth/logOutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport const AppLoader = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Circles\"\r\n      color=\"#636571\"\r\n      height={40}\r\n      width={40}\r\n      timeout={5000}\r\n      className=\"loader\"\r\n    />\r\n  );\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest =');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n"],"sourceRoot":""}