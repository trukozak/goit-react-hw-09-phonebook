{"version":3,"sources":["languages/languageSelectors/authForm.js","components/Auth/AuthFormStyled.js","components/Auth/AuthForm.js","pages/AuthPage.js"],"names":["authFormSelectors","language","value","languages","pages","authPage","authForm","authFormPlaceholders","placeholders","authFormBtnSelectors","buttons","AuthFormStyled","styled","form","props","colors","title","edit","initialState","name","email","password","AuthForm","useContext","LanguageContext","theme","ThemeContext","useState","state","setState","location","useLocation","dispatch","useDispatch","onHandleChange","event","target","prev","autoComplete","onSubmit","preventDefault","pathname","registerOperation","loginOperation","type","placeholder","pattern","required","onChange","minLength","AuthPage"],"mappings":"kNAEaA,EAAoB,SAACC,EAAUC,GAAX,OAC/BC,IAAUF,GAAUG,MAAMC,SAASC,SAASJ,IACjCK,EAAuB,SAACN,EAAUC,GAAX,OAClCC,IAAUF,GAAUG,MAAMC,SAASC,SAASE,aAAaN,IAC9CO,EAAuB,SAACR,EAAUC,GAAX,OAClCC,IAAUF,GAAUG,MAAMC,SAASC,SAASI,QAAQR,I,wBCsBvCS,E,MA3BQC,EAAOC,KAAV,0cAKE,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,SAEjC,SAAAF,GAAK,OAAIA,EAAMC,OAAOC,SAUb,SAAAF,GAAK,OAAIA,EAAMC,OAAOE,Q,OCJpCC,EAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAiFvCC,EA/EE,WACf,IAAQrB,EAAasB,qBAAWC,KAAxBvB,SACAwB,EAAUF,qBAAWG,KAArBD,MAER,EAA0BE,mBAAST,GAAnC,mBAAOU,EAAP,KAAcC,EAAd,KACMC,EAAWC,cACXC,EAAWC,cAEXC,EAAiB,SAAAC,GACrB,MAAwBA,EAAMC,OAAtBjB,EAAR,EAAQA,KAAMjB,EAAd,EAAcA,MACd2B,GAAS,SAAAQ,GAAI,kCAAUA,GAAV,kBAAiBlB,EAAOjB,QAavC,OACE,eAAC,EAAD,CACEoC,aAAa,MACbC,SAbmB,SAAAJ,GACrBA,EAAMK,iBACN,IAAQpB,EAAoBQ,EAApBR,MAAOC,EAAaO,EAAbP,SAEO,cAAtBS,EAASW,SACLT,EAASU,YAAkBd,IAC3BI,EAASW,YAAe,CAAEvB,QAAOC,cACrCQ,EAAS,eAAKX,KAOZH,OAAQU,EAAMV,OAHhB,UAKyB,cAAtBe,EAASW,UACR,kCACGzC,EAAkBC,EAAU,YAD/B,IAC4C,uBAC1C,uBACE2C,KAAK,OACLzB,KAAK,OACL0B,YAAatC,EAAqBN,EAAU,QAC5CqC,aAAa,KACbQ,QAAQ,wHACR9B,MAAM,kcACN+B,UAAQ,EACR7C,MAAO0B,EAAMT,KACb6B,SAAUd,OAIhB,kCACGlC,EAAkBC,EAAU,SAD/B,IACyC,uBACvC,uBACE2C,KAAK,OACLzB,KAAK,QACL0B,YAAY,mBACZP,aAAa,KACbS,UAAQ,EACR7C,MAAO0B,EAAMR,MACb4B,SAAUd,OAGd,kCACGlC,EAAkBC,EAAU,YAC7B,uBACA,uBACE2C,KAAK,OACLzB,KAAK,WACL0B,YAAatC,EAAqBN,EAAU,YAC5CgD,UAAU,IACVX,aAAa,KACbS,UAAQ,EACR7C,MAAO0B,EAAMP,SACb2B,SAAUd,OAGd,wBAAQU,KAAK,SAAb,SACyB,cAAtBd,EAASW,SACNhC,EAAqBR,EAAU,YAC/BQ,EAAqBR,EAAU,eCpF5BiD,UAJE,WACf,OAAO,cAAC,EAAD","file":"static/js/0.7832a0bb.chunk.js","sourcesContent":["import languages from '..';\r\n\r\nexport const authFormSelectors = (language, value) =>\r\n  languages[language].pages.authPage.authForm[value];\r\nexport const authFormPlaceholders = (language, value) =>\r\n  languages[language].pages.authPage.authForm.placeholders[value];\r\nexport const authFormBtnSelectors = (language, value) =>\r\n  languages[language].pages.authPage.authForm.buttons[value];\r\n","import styled from 'styled-components';\n\nconst AuthFormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 20px;\n  border: 2px solid ${props => props.colors.title};\n  border-radius: 6px;\n  color: ${props => props.colors.title};\n\n  label {\n    margin-bottom: 20px;\n  }\n  input {\n    width: 300px;\n    margin-bottom: 10px;\n    margin-left: 5px;\n    padding: 5px;\n    border-color: ${props => props.colors.edit};\n    border-radius: 5px;\n  }\n  button {\n    border-radius: 5px;\n    cursor: pointer;\n    padding: 5px;\n  }\n`;\n\nexport default AuthFormStyled;\n","import React, { useContext, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {\r\n  authFormBtnSelectors,\r\n  authFormPlaceholders,\r\n  authFormSelectors,\r\n} from '../../languages/languageSelectors/authForm';\r\nimport {\r\n  loginOperation,\r\n  registerOperation,\r\n} from '../../redux/auth/authOperations';\r\nimport { LanguageContext, ThemeContext } from '../App';\r\nimport AuthFormStyled from './AuthFormStyled';\r\n\r\nconst initialState = { name: '', email: '', password: '' };\r\n\r\nconst AuthForm = () => {\r\n  const { language } = useContext(LanguageContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleChange = event => {\r\n    const { name, value } = event.target;\r\n    setState(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onHandleSubmit = event => {\r\n    event.preventDefault();\r\n    const { email, password } = state;\r\n\r\n    location.pathname === '/register'\r\n      ? dispatch(registerOperation(state))\r\n      : dispatch(loginOperation({ email, password }));\r\n    setState({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <AuthFormStyled\r\n      autoComplete=\"off\"\r\n      onSubmit={onHandleSubmit}\r\n      colors={theme.colors}\r\n    >\r\n      {location.pathname === '/register' && (\r\n        <label>\r\n          {authFormSelectors(language, 'username')} <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder={authFormPlaceholders(language, 'name')}\r\n            autoComplete=\"on\"\r\n            pattern=\"^[A-ZA-ZА-ЯА-Я]+(([' -][A-ZA-ZА-ЯА-Я])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={state.name}\r\n            onChange={onHandleChange}\r\n          />\r\n        </label>\r\n      )}\r\n      <label>\r\n        {authFormSelectors(language, 'email')} <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"blabla@gmail.com\"\r\n          autoComplete=\"on\"\r\n          required\r\n          value={state.email}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        {authFormSelectors(language, 'password')}\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          placeholder={authFormPlaceholders(language, 'password')}\r\n          minLength=\"5\"\r\n          autoComplete=\"on\"\r\n          required\r\n          value={state.password}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">\r\n        {location.pathname === '/register'\r\n          ? authFormBtnSelectors(language, 'register')\r\n          : authFormBtnSelectors(language, 'login')}\r\n      </button>\r\n    </AuthFormStyled>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport AuthForm from '../components/Auth/AuthForm';\r\n\r\nconst AuthPage = () => {\r\n  return <AuthForm />;\r\n};\r\n\r\nexport default AuthPage;\r\n"],"sourceRoot":""}